# Generated by Django 4.0.1 on 2022-12-06 16:14

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import easy_thumbnails.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('fio', models.CharField(max_length=100, null=True, verbose_name='ФИО')),
                ('photoUser', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='photos/%Y/%m/%d', verbose_name='Фото')),
                ('dateCreateUser', models.DateField(auto_now_add=True, null=True, verbose_name='Дата создания профиля')),
                ('dateUpdateUser', models.DateTimeField(auto_now=True, verbose_name='Дата и время когда user был обновлен')),
                ('usualUserOrModer', models.BooleanField(default=False, verbose_name='Модератор?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Юзер',
                'verbose_name_plural': 'Юзеры',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Photo',
            fields=[
                ('photoID', models.BigAutoField(primary_key=True, serialize=False)),
                ('namePhoto', models.CharField(max_length=150, verbose_name='Название фотографии ')),
                ('сontentPhoto', models.TextField(blank=True, verbose_name='Описание к фотографии')),
                ('dateCreatePhoto', models.DateField(auto_now_add=True, verbose_name='Дата добавления фотографии')),
                ('dateUpdatePhoto', models.DateTimeField(auto_now=True, verbose_name='Дата и время когда фотография была обновлена')),
                ('InfoPublishedPhoto', models.BooleanField(default=False, verbose_name='Опубликовать?')),
                ('DeletePhoto', models.BooleanField(default=False, verbose_name='Отправлено на удаление?')),
                ('ModificationPhoto', models.BooleanField(default=False, verbose_name='Изменили фотографию?')),
                ('newPhoto', models.ImageField(upload_to='photos_main/%Y/%m/%d', verbose_name='Фотография')),
                ('oldPhoto', models.ImageField(blank=True, upload_to='photos_old/%Y/%m/%d', verbose_name='Старая фотография')),
                ('photo_145x165', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='photos_145x165/%Y/%m/%d', verbose_name='Фото размером 145x165')),
                ('photo_510x510', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='photos_510x510/%Y/%m/%d', verbose_name='Фото размером 510x510')),
                ('photo_1680x1680', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to='photos_1680x1680/%Y/%m/%d', verbose_name='Фото размером 1680х1680')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Фото',
                'verbose_name_plural': 'Фотографии',
            },
        ),
    ]
